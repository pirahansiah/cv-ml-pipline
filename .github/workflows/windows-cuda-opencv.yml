name: windows-cuda-opencv
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # Install CUDA Toolkit (toolchain only; no GPU required to compile)
      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.18
        with:
          cuda: "12.4.1"

      # Setup Visual Studio environment (this makes cl.exe available)
      - name: Setup Visual Studio Environment
        uses: microsoft/setup-msbuild@v1.3

      - name: Setup Visual Studio Dev Environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # Install 7zip (keeping this for future OpenCV use)
      - name: Install 7zip
        run: choco install -y 7zip

      # Faster Windows builds
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4

      # Configure CMake for CUDA-only build
      - name: Configure (CMake)
        shell: bash
        run: |
          cmake -S cuda \
                -B build -G "Ninja" \
                -DCMAKE_BUILD_TYPE=Release

      - name: Build
        shell: bash
        run: cmake --build build --config Release -v

      - name: Show nvcc version
        shell: bash
        run: nvcc --version

      - name: Test CUDA executable
        shell: bash
        run: ./build/cuda_versions.exe || echo "Executable not found or failed to run"

      - name: Upload .exe
        uses: actions/upload-artifact@v4
        with:
          name: cuda-windows-exe
          path: build/**/*.exe